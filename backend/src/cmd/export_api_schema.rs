//! This tiny binary just export the GraphQL API Schema from the backend `api`
//! code. The schema is required for the frontend to compile.

use anyhow::Result;
use std::path::{Path, PathBuf};


#[derive(Debug, clap::Args)]
pub(crate) struct Args {
    /// Optional path to output file. If this is not specified, the schema is
    /// written directly to stdout. If the file does not exist, it and all its
    /// parent directories are created.
    pub(crate) output: Option<PathBuf>,
}

const PRELUDE: &str = "\
    # Auto-generated file: DO NOT EDIT DIRECTLY!\n\
    #\n\
    # This file is generated by `backend/src/cmd/export_api_schema.rs`. The\n\
    # API itself is defined in `backend/src/api`.\n\
";

pub(crate) fn run(args: &Args) -> Result<()> {
    let schema = format!("{}\n{}", PRELUDE, crate::api::root_node().as_sdl());

    if let Some(target) = &args.output {
        if let Some(parent) = Path::new(&target).parent() {
            std::fs::create_dir_all(parent)?;
        }
        std::fs::write(target, schema)?;
    } else {
        print!("{}", schema);
    }

    Ok(())
}
