services:
  # The server handling login callback requests.
  tobira-login-handler:
    image: node:18
    ports:
      - "3091:3091"
    volumes:
      - ../dummy-login/dist/index.js:/usr/bin/login-handler.js
    command: node /usr/bin/login-handler.js

  # A reverse proxy in front of Opencast that just adds some CORS headers
  # (required for the Tobira uploader, for example).
  opencast-cors-proxy:
    image: nginx
    ports:
      - "8081:8081"
    extra_hosts:
      - "host.docker.internal:host-gateway"
    volumes:
      - ./opencast-cors-proxy-nginx.conf:/etc/nginx/conf.d/default.conf

  # A PostgreSQL database for Tobira.
  tobira-dev-database:
    image: docker.io/library/postgres:12
    restart: unless-stopped
    ports:
      - 127.0.0.1:5432:5432
    volumes:
      - tobira-dev-postgres:/var/lib/postgresql/data
    environment:
      - POSTGRES_PASSWORD=tobira
      - POSTGRES_USER=tobira
      - POSTGRES_DB=tobira

  # A MeiliSearch for Tobira.
  tobira-meilisearch:
    image: getmeili/meilisearch:v1.12
    restart: unless-stopped
    ports:
      - 127.0.0.1:7700:7700
    volumes:
      - tobira-dev-meili:/data.ms
    environment:
      - MEILI_NO_ANALYTICS=true
      - MEILI_MASTER_KEY=tobira

  # A static file server for UI tests
  tobira-ui-test-files:
    image: nginx
    ports:
      - "38456:38456"
    volumes:
      - ./ui-test-files-nginx.conf:/etc/nginx/conf.d/default.conf
      - ./test-files:/www/data


volumes:
  tobira-dev-postgres:
  tobira-dev-meili:
